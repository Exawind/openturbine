#include <initializer_list>

#include <gtest/gtest.h>

#include "src/restruct_poc/beams/beam_element.hpp"
#include "src/restruct_poc/beams/beam_node.hpp"
#include "src/restruct_poc/beams/beam_section.hpp"
#include "src/restruct_poc/beams/beams.hpp"
#include "src/restruct_poc/beams/beams_input.hpp"
#include "src/restruct_poc/beams/create_beams.hpp"
#include "src/restruct_poc/solver/state.hpp"
#include "src/restruct_poc/system/assemble_elastic_stiffness_matrix.hpp"
#include "src/restruct_poc/system/assemble_gyroscopic_inertia_matrix.hpp"
#include "src/restruct_poc/system/assemble_inertial_stiffness_matrix.hpp"
#include "src/restruct_poc/system/assemble_mass_matrix.hpp"
#include "src/restruct_poc/system/assemble_residual_vector.hpp"
#include "src/restruct_poc/system/update_state.hpp"
#include "src/restruct_poc/types.hpp"
#include "tests/unit_tests/gen_alpha_poc/test_utilities.h"

namespace openturbine::restruct_poc::tests {

class BeamsTest : public testing::Test {
protected:
    // Per-test-suite set-up.
    // Called before the first test in this test suite.
    // Can be omitted if not needed.
    static void SetUpTestSuite() {
        // Stiffness matrix for uniform composite beam section
        std::array<std::array<double, 6>, 6> stiffness_matrix = {{
            {1., 2., 3., 4., 5., 6.},
            {2., 4., 6., 8., 10., 12.},
            {3., 6., 9., 12., 15., 18.},
            {4., 8., 12., 16., 20., 24.},
            {5., 10., 15., 20., 25., 30.},
            {6., 12., 18., 24., 30., 36.},
        }};

        // Mass matrix for uniform composite beam section
        std::array<std::array<double, 6>, 6> mass_matrix = {{
            {2., 0., 0., 0., 0.6, -0.4},
            {0., 2., 0., -0.6, 0., 0.2},
            {0., 0., 2., 0.4, -0.2, 0.},
            {0., -0.6, 0.4, 1., 2., 3.},
            {0.6, 0., -0.2, 2., 4., 6.},
            {-0.4, 0.2, 0., 3., 6., 9.},
        }};

        std::array<double, 3> gravity = {0., 0., 9.81};
        // Define beam initialization
        BeamsInput beams_input(
            {
                BeamElement(
                    {
                        BeamNode(
                            0., {0, 0, 0, 0.9778215200524469, -0.01733607539094763,
                                 -0.09001900002195001, -0.18831121859148398}
                        ),
                        BeamNode(
                            0.1726731646460114,
                            {0.863365823230057, -0.2558982639254171, 0.11304112106827427,
                             0.9950113028068008, -0.002883848832932071, -0.030192109815745303,
                             -0.09504013471947484}
                        ),
                        BeamNode(
                            0.5, {2.5, -0.25, 0, 0.9904718430204884, -0.009526411091536478,
                                  0.09620741150793366, 0.09807604012323785}
                        ),
                        BeamNode(
                            0.82732683535398865,
                            {4.1366341767699435, 0.39875540678256005, -0.5416125496397031,
                             0.9472312341234699, -0.04969214162931507, 0.18127630174800594,
                             0.25965858850765167}
                        ),
                        BeamNode(
                            1., {5, 1, -1, 0.9210746582719719, -0.07193653093139739,
                                 0.20507529985516368, 0.32309554437664584}
                        ),
                    },
                    {
                        BeamSection(0., mass_matrix, stiffness_matrix),
                        BeamSection(1., mass_matrix, stiffness_matrix),
                    },
                    BeamQuadrature{
                        {-0.9491079123427585, 0.1294849661688697},
                        {-0.7415311855993943, 0.27970539148927664},
                        {-0.40584515137739696, 0.3818300505051189},
                        {6.123233995736766e-17, 0.4179591836734694},
                        {0.4058451513773971, 0.3818300505051189},
                        {0.7415311855993945, 0.27970539148927664},
                        {0.9491079123427585, 0.1294849661688697},
                    }
                ),
            },
            gravity
        );

        // Initialize beams from element inputs
        beams_ = new Beams();
        *beams_ = CreateBeams(beams_input);

        // Create initial state
        State state(
            beams_->num_nodes,  // Number of nodes
            0,                  // Number of constraints
            // displacement
            {
                {0, 0, 0, 1, 0, 0, 0},
                {0.002981602178886856, -0.00246675949494302, 0.003084570715675624,
                 0.9999627302042724, 0.008633550973807708, 0, 0},
                {0.025, -0.0125, 0.027500000000000004, 0.9996875162757026, 0.02499739591471221, 0,
                 0},
                {0.06844696924968459, -0.011818954790771264, 0.07977257214146725, 0.9991445348823055,
                 0.04135454527402512, 0, 0},
                {0.1, 0, 0.12, 0.9987502603949663, 0.04997916927067825, 0, 0},
            },
            // velocity
            {
                {0, 0, 0, 0, 0, 0},
                {0.01726731646460114, -0.014285714285714285, 0.003084570715675624,
                 0.01726731646460114, -0.014285714285714285, 0.003084570715675624},
                {0.05, -0.025, 0.027500000000000004, 0.05, -0.025, 0.027500000000000004},
                {0.08273268353539887, -0.01428571428571428, 0.07977257214146725, 0.08273268353539887,
                 -0.01428571428571428, 0.07977257214146725},
                {0.1, 0, 0.12, 0.1, 0, 0.12},
            },
            // acceleration
            {
                {0, 0, 0, 0, 0, 0},
                {0.01726731646460114, -0.011304112106827427, 0.00606617289456248,
                 0.01726731646460114, -0.014285714285714285, -0.014285714285714285},
                {0.05, 0, 0.052500000000000005, 0.05, -0.025, -0.025},
                {0.08273268353539887, 0.05416125496397031, 0.14821954139115184, 0.08273268353539887,
                 -0.01428571428571428, -0.01428571428571428},
                {0.1, 0.1, 0.22000000000000003, 0.1, 0, 0},
            }
        );

        // Set the beam's initial state
        UpdateState(*beams_, state.q, state.v, state.vd);
    }

    // Per-test-suite tear-down.
    // Called after the last test in this test suite.
    // Can be omitted if not needed.
    static void TearDownTestSuite() {
        delete beams_;
        beams_ = nullptr;
    }

    // You can define per-test set-up logic as usual.
    //   void SetUp() override { ... }

    // You can define per-test tear-down logic as usual.
    //   void TearDown() override { ... }

    // Some expensive resource shared by all tests.
    static Beams* beams_;
};

Beams* BeamsTest::beams_ = nullptr;

TEST_F(BeamsTest, NodeInitialPositionX0) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->node_x0,
        {
            {0., 0., 0., 0.9778215200524469, -0.01733607539094763, -0.09001900002195001,
             -0.18831121859148398},
            {0.863365823230057, -0.2558982639254171, 0.11304112106827427, 0.9950113028068008,
             -0.002883848832932071, -0.030192109815745303, -0.09504013471947484},
            {2.5, -0.25, 0., 0.9904718430204884, -0.009526411091536478, 0.09620741150793366,
             0.09807604012323785},
            {4.1366341767699435, 0.39875540678256005, -0.5416125496397031, 0.9472312341234699,
             -0.04969214162931507, 0.18127630174800594, 0.25965858850765167},
            {5., 1., -1., 0.9210746582719719, -0.07193653093139739, 0.20507529985516368,
             0.32309554437664584},
        }
    );
}

TEST_F(BeamsTest, NodeInitialDisplacement) {
    std::cout << 11 << std::endl;
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->node_u,
        {
            {0., 0., 0., 1., 0., 0., 0.},
            {0.002981602178886856, -0.00246675949494302, 0.003084570715675624, 0.9999627302042724,
             0.008633550973807708, 0., 0.},
            {0.025, -0.0125, 0.027500000000000004, 0.9996875162757026, 0.02499739591471221, 0., 0.},
            {0.06844696924968459, -0.011818954790771264, 0.07977257214146725, 0.9991445348823055,
             0.04135454527402512, 0., 0.},
            {0.1, 0., 0.12, 0.9987502603949663, 0.04997916927067825, 0., 0.},
        }
    );
}

TEST_F(BeamsTest, NodeInitialVelocity) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->node_u_dot,
        {
            {0., 0., 0., 0., 0., 0},
            {0.01726731646460114, -0.014285714285714285, 0.003084570715675624, 0.01726731646460114,
             -0.014285714285714285, 0.003084570715675624},
            {0.05, -0.025, 0.027500000000000004, 0.05, -0.025, 0.027500000000000004},
            {0.08273268353539887, -0.01428571428571428, 0.07977257214146725, 0.08273268353539887,
             -0.01428571428571428, 0.07977257214146725},
            {0.1, 0., 0.12, 0.1, 0., 0.12},
        }
    );
}

TEST_F(BeamsTest, NodeInitialAcceleration) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->node_u_ddot,
        {
            {0., 0., 0., 0., 0., 0},
            {0.01726731646460114, -0.011304112106827427, 0.00606617289456248, 0.01726731646460114,
             -0.014285714285714285, -0.014285714285714285},
            {0.05, 0., 0.052500000000000005, 0.05, -0.025, -0.025},
            {0.08273268353539887, 0.05416125496397031, 0.14821954139115184, 0.08273268353539887,
             -0.01428571428571428, -0.01428571428571428},
            {0.1, 0.1, 0.22000000000000003, 0.1, 0., 0.},
        }
    );
}

TEST_F(BeamsTest, ShapeFunctionInterpolationMatrix) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->shape_interp,
        {{0.7643937937285443, 0.13706262395004942, -0.13172898316530468,
          0.000000000000000022962127484012874, 0.05567285555959517, -0.020342107108930366,
          -0.01995866709520774},
         {0.308266541035087, 0.95147326166415, 0.7339940232440426,
          -0.00000000000000008184220124322266, -0.1722057227387884, 0.05920536387827322,
          0.05659843178759581},
         {-0.1093000994560195, -0.12739914238354233, 0.5142678271004555, 0.9999999999999999,
          0.5142678271004553, -0.12739914238354247, -0.1093000994560195},
         {0.05659843178759582, 0.05920536387827313, -0.17220572273878845,
          0.0000000000000000818422012432227, 0.7339940232440427, 0.9514732616641498,
          0.308266541035087},
         {-0.01995866709520774, -0.020342107108930346, 0.055672855559595176,
          -0.000000000000000022962127484012877, -0.1317289831653047, 0.13706262395004964,
          0.7643937937285443}}
    );
}

TEST_F(BeamsTest, ShapeFunctionDerivativeMatrix) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->shape_deriv,
        {{-4.2701511577426, -1.9393626617606694, 0.013055310813328586, 0.375, -0.12778431702017545,
          -0.1974469591256584, 0.29092055406654616},
         {5.3820901606566505, 1.1702482430865344, -1.7874218089539982, -1.3365845776954526,
          0.4351480290853632, 0.5662571364020152, -0.8312402426318174},
         {-1.6522586914793211, 1.137924595950492, 2.0817302102058575,
          -0.0000000000000006661338147750939, -2.081730210205858, -1.1379245959504911,
          1.6522586914793211},
         {0.8312402426318174, -0.5662571364020155, -0.4351480290853627, 1.3365845776954537,
          1.7874218089539977, -1.1702482430865357, -5.38209016065665},
         {-0.2909205540665461, 0.1974469591256585, 0.12778431702017526, -0.3750000000000001,
          -0.013055310813328114, 1.9393626617606703, 4.2701511577426}}
    );
}

TEST_F(BeamsTest, JacobianArray) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_1D_equal(
        beams_->qp_jacobian,
        {2.7027484463552844, 2.585197218483525, 2.5041356900076877, 2.5980762113533173,
         2.8809584014451253, 3.2234919864103784, 3.4713669823269462}
    );
}

TEST_F(BeamsTest, QuadraturePointWeights) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_1D_equal(
        beams_->qp_weight,
        {0.1294849661688697, 0.27970539148927664, 0.3818300505051189, 0.4179591836734694,
         0.3818300505051189, 0.27970539148927664, 0.1294849661688697}
    );
}

TEST_F(BeamsTest, QuadraturePointMassMatrixInMaterialFrame) {
    auto Mstar = View_NxN("Mstar", beams_->qp_Mstar.extent(1), beams_->qp_Mstar.extent(2));
    Kokkos::deep_copy(Mstar, Kokkos::subview(beams_->qp_Mstar, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Mstar,
        {
            {2., 0., 0., 0., 0.6, -0.4},
            {0., 2., 0., -0.6, 0., 0.2},
            {0., 0., 2., 0.4, -0.2, 0.},
            {0., -0.6, 0.4, 1., 2., 3.},
            {0.6, 0., -0.2, 2., 4., 6.},
            {-0.4, 0.2, 0., 3., 6., 9.},

        }
    );
}

TEST_F(BeamsTest, QuadraturePointStiffnessMatrixInMaterialFrame) {
    auto Cstar = View_NxN("Cstar", beams_->qp_Cstar.extent(1), beams_->qp_Cstar.extent(2));
    Kokkos::deep_copy(Cstar, Kokkos::subview(beams_->qp_Cstar, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Cstar,
        {
            {1., 2., 3., 4., 5., 6.},
            {2., 4., 6., 8., 10., 12.},
            {3., 6., 9., 12., 15., 18.},
            {4., 8., 12., 16., 20., 24.},
            {5., 10., 15., 20., 25., 30.},
            {6., 12., 18., 24., 30., 36.},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointInitialPosition) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_x0,
        {
            {0.12723021914310378, -0.04894958421765723, 0.024151041535564563},
            {0.6461720360015141, -0.20836421838736455, 0.09583134319147545},
            {1.4853871215565078, -0.32938986051629177, 0.12056743224042737},
            {2.5, -0.24999999999999994, -3.061616997868384e-17},
            {3.5146128784434927, 0.07645529086110522, -0.28527771913696975},
            {4.353827963998485, 0.5331669672120298, -0.645699842407919},
            {4.8727697808568955, 0.9001583281251011, -0.9249568708071938},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointInitialPositionDerivative) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_x0_prime,
        {
            {0.924984344499876, -0.3417491071948319, 0.16616711516322952},
            {0.9670442092872504, -0.23684722156643212, 0.09342853375847142},
            {0.9983484561063567, -0.0434352369562536, -0.03759973910292136},
            {0.9622504486493763, 0.19245008972987515, -0.1924500897298753},
            {0.8677667816189111, 0.38486072083162454, -0.3144249326623439},
            {0.7755564495086442, 0.5001708660037699, -0.38515100730308954},
            {0.7201773862365269, 0.5541511105877541, -0.4174458994742709},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointInitialRotation) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_r0,
        {
            {0.980884413320975, -0.0144723270940525, -0.0824443301646419, -0.1756680160876},
            {0.991669584564107, -0.005383778767255235, -0.04674982717307109, -0.11990372653059925},
            {0.9995861588301111, -0.00017992787003652953, 0.01938431110866726, -0.02125387456601228},
            {0.9904718430204885, -0.00952641109153648, 0.09620741150793369, 0.09807604012323788},
            {0.9659269297215409, -0.03234979016749597, 0.15563090950471747, 0.2042490575781702},
            {0.9405335895294235, -0.05575622959800262, 0.18841261313027519, 0.2771073745704617},
            {0.9248004133377579, -0.06909685323377392, 0.20225483002403755, 0.3147424408869105},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointTranslationalDisplacement) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_u,
        {
            {6.475011465280995e-5, -6.310248039744534e-5, 6.5079641503883e-5},
            {0.001670153200441368, -0.0014543119416486395, 0.0017133214521999145},
            {0.00882549960354371, -0.006203642913062532, 0.009349870941639945},
            {0.025000000000000000, -0.012500000000000000, 0.027500000000000004},
            {0.049410014741283426, -0.014678599914523912, 0.05635629770663533},
            {0.07582327176038081, -0.00979897557794027, 0.08902813099686892},
            {0.09497554134892866, -0.002416751787811821, 0.113487299261152},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointTranslationalDisplacementDerivative) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_u_prime,
        {
            {0.0009414876868372848, -0.0009055519814222241, 0.0009486748279202956},
            {0.0049990154049489330, -0.0040299482162833, 0.00519282884268206},
            {0.0118634715162096380, -0.006576917174070561, 0.012920782384637453},
            {0.0192450089729875180, -0.004811252243246878, 0.022131760318935656},
            {0.0243989144493063000, 0.0013269072337655852, 0.029544078785920684},
            {0.0270131148602409250, 0.008270021601725071, 0.03406974215263411},
            {0.0280740688360788040, 0.012965473438963544, 0.03628197729108727},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointRotationalDisplacement) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_r,
        {
            {0.9999991906236807, 0.001272301844556629, 0.0, 0.0},
            {0.9999791231576566, 0.006461675389885671, 0.0, 0.0},
            {0.9998896832832036, 0.014853325008724992, 0.0, 0.0},
            {0.9996875162757026, 0.024997395914712214, 0.0, 0.0},
            {0.9993824383901835, 0.035138893512620800, 0.0, 0.0},
            {0.9990523588113228, 0.043524525885204780, 0.0, 0.0},
            {0.9988130406194091, 0.048708417020170240, 0.0, 0.0},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointRotationalDisplacementDerivative) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_r_prime,
        {
            {-1.1768592508490864e-5, 0.009249835939573259, 0.0, 0.0},
            {-6.24872579944091e-5, 0.009670240217676533, 0.0, 0.0},
            {-0.00014828794095145858, 0.009982383220428504, 0.0, 0.0},
            {-0.00024053755400424963, 0.009619497597035018, 0.0, 0.0},
            {-0.0003049236454906731, 0.008672308825681862, 0.0, 0.0},
            {-0.00033755726789449716, 0.007748215013234193, 0.0, 0.0},
            {-0.00035078700412695185, 0.0071932256346726306, 0.0, 0.0},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointInitialTranslationalVelocity) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_u_dot,
        {
            {0.0025446043828620765, -0.0024798542682092665, 6.5079641503883e-5},
            {0.0129234407200302820, -0.0112532875195889140, 0.0017133214521999145},
            {0.0297077424311301600, -0.0208822428275864500, 0.009349870941639945},
            {0.0500000000000000000, -0.0249999999999999980, 0.027500000000000004},
            {0.0702922575688698500, -0.0208822428275864400, 0.05635629770663533},
            {0.0870765592799697300, -0.0112532875195889040, 0.08902813099686892},
            {0.0974553956171379200, -0.0024798542682092648, 0.113487299261152},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointInitialAngularVelocity) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_omega,
        {
            {0.0025446043828620765, -0.0024798542682092665, 6.5079641503883e-5},
            {0.0129234407200302820, -0.011253287519588914, 0.0017133214521999145},
            {0.0297077424311301600, -0.020882242827586450, 0.009349870941639945},
            {0.0500000000000000000, -0.024999999999999998, 0.027500000000000004},
            {0.0702922575688698500, -0.020882242827586440, 0.05635629770663533},
            {0.0870765592799697300, -0.011253287519588904, 0.08902813099686892},
            {0.0974553956171379200, -0.0024798542682092648, 0.113487299261152},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointTranslationalAcceleration) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_u_ddot,
        {
            {0.0025446043828620765, -0.0024151041535564553, 0.0001298297561566934},
            {0.012923440720030282, -0.009583134319147544, 0.003383474652641283},
            {0.02970774243113016, -0.01205674322404274, 0.018175370545183655},
            {0.05000000000000000, 3.0616169978683843e-18, 0.052500000000000005},
            {0.07029225756886985, 0.028527771913696987, 0.10576631244791876},
            {0.08707655927996973, 0.06456998424079191, 0.16485140275724972},
            {0.09745539561713792, 0.0924956870807194, 0.2084628406100807},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointAngularAcceleration) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_omega_dot,
        {
            {0.0025446043828620765, -0.0024798542682092665, -0.0024798542682092665},
            {0.012923440720030282, -0.011253287519588914, -0.011253287519588914},
            {0.02970774243113016, -0.02088224282758645, -0.02088224282758645},
            {0.05000000000000000, -0.024999999999999998, -0.024999999999999998},
            {0.07029225756886985, -0.02088224282758644, -0.02088224282758644},
            {0.08707655927996973, -0.011253287519588904, -0.011253287519588904},
            {0.09745539561713792, -0.0024798542682092648, -0.0024798542682092648},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointRR0) {
    auto RR0 = View_NxN("RR0", beams_->qp_RR0.extent(1), beams_->qp_RR0.extent(2));
    Kokkos::deep_copy(RR0, Kokkos::subview(beams_->qp_RR0, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        RR0,
        {
            {0.9246873610951006, 0.34700636042507577, -0.156652066872805, 0.0, 0.0, 0.0},
            {-0.3426571011111718, 0.937858102036658, 0.05484789423748749, 0.0, 0.0, 0.0},
            {0.16594997827377847, 0.002960788533623304, 0.9861297269843315, 0.0, 0.0, 0.0},
            {0.0, 0.0, 0.0, 0.9246873610951006, 0.34700636042507577, -0.156652066872805},
            {0.0, 0.0, 0.0, -0.3426571011111718, 0.937858102036658, 0.05484789423748749},
            {0.0, 0.0, 0.0, 0.16594997827377847, 0.002960788533623304, 0.9861297269843315},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointMassMatrixInGlobalFrame) {
    auto Muu = View_NxN("Muu", beams_->qp_Muu.extent(1), beams_->qp_Muu.extent(2));
    Kokkos::deep_copy(Muu, Kokkos::subview(beams_->qp_Muu, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Muu,
        {
            {2.000000000000001, 5.204170427930421e-17, -5.551115123125783e-17,
             -4.163336342344337e-17, 0.626052147258804, -0.3395205571349214},
            {5.204170427930421e-17, 2.0000000000000018, 1.3877787807814457e-17, -0.6260521472588039,
             -3.469446951953614e-18, 0.22974877626536766},
            {-5.551115123125783e-17, 1.3877787807814457e-17, 2.0000000000000013, 0.33952055713492146,
             -0.22974877626536772, -1.3877787807814457e-17},
            {4.163336342344337e-17, -0.626052147258804, 0.3395205571349214, 1.3196125048858467,
             1.9501108129670985, 3.5958678677753957},
            {0.6260521472588039, 3.469446951953614e-18, -0.22974877626536766, 1.9501108129670985,
             2.881855217930184, 5.313939345820573},
            {-0.33952055713492146, 0.22974877626536772, 1.3877787807814457e-17, 3.5958678677753957,
             5.3139393458205735, 9.79853227718398},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointStiffnessMatrixInGlobalFrame) {
    auto Cuu = View_NxN("Cuu", beams_->qp_Cuu.extent(1), beams_->qp_Cuu.extent(2));
    Kokkos::deep_copy(Cuu, Kokkos::subview(beams_->qp_Cuu, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Cuu,
        {
            {1.3196125048858467, 1.9501108129670985, 3.5958678677753957, 5.1623043394880055,
             4.190329885612304, 7.576404967559343},
            {1.9501108129670985, 2.881855217930184, 5.313939345820573, 7.628804270184899,
             6.192429663690275, 11.196339225304031},
            {3.5958678677753957, 5.3139393458205735, 9.79853227718398, 14.066981200400345,
             11.418406945420463, 20.64526599682174},
            {5.162304339488006, 7.628804270184899, 14.066981200400342, 20.194857198478893,
             16.392507703808057, 29.638782670624547},
            {4.190329885612305, 6.192429663690274, 11.418406945420463, 16.392507703808064,
             13.3060762043738, 24.058301996624227},
            {7.576404967559343, 11.196339225304033, 20.64526599682174, 29.63878267062455,
             24.058301996624223, 43.499066597147355},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointStrain) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_strain,
        {
            {0.0009414876868373279, -0.00048382928348705834, 0.0018188281296873943,
             0.0184996868523541, 0.0, 0.0},
            {0.004999015404948959, -0.002842341990545394, 0.008261426556751703, 0.019340884211946498,
             0.0, 0.0},
            {0.01186347151620959, -0.007712921718478594, 0.014194364820045248, 0.0199669691313353,
             0.0, 0.0},
            {0.019245008972987532, -0.014189235354885782, 0.01227275220904131, 0.019245008946139657,
             0.0, 0.0},
            {0.024398914449306308, -0.01980612763870543, 0.0017371550623738186, 0.01735533564038205,
             0.0, 0.0},
            {0.02701311486024094, -0.023330205052589426, -0.010887645811743119, 0.015511129011186278,
             0.0, 0.0},
            {0.02807406883607877, -0.02502305729533416, -0.019618382135299595, 0.014403547695422242,
             0.0, 0.0},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointElasticForceFC) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_Fc,
        {
            {0.10234015755301404, 0.15123731179112573, 0.2788710191555731, 0.4003531623743687,
             0.3249734441776631, 0.587574363833825},
            {0.13306714951787607, 0.19697673529625817, 0.35331128776303233, 0.5133351516878956,
             0.4501862995539333, 0.7288106297098484},
            {0.1574290494109584, 0.24483537583051979, 0.39546209547846906, 0.5824699918301253,
             0.6098871468512939, 0.7841672804415049},
            {0.11793522304442454, 0.22073370020290126, 0.2970111064121941, 0.4152800673577701,
             0.5850266055677404, 0.5612027971947426},
            {0.03186778209076205, 0.08327525615132295, 0.09383878502122098, 0.1098030416906359,
             0.22617087196765523, 0.17014187136266343},
            {-0.023089877459047222, -0.09044007186162746, -0.09136793568603306, -0.08138800637367143,
             -0.24723410629067144, -0.16150807105320447},
            {-0.038045836638108975, -0.20629914099635355, -0.19957255488872738, -0.14032215607825765,
             -0.565277913007998, -0.34909700109374714},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointElasticForceFD) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_Fd,
        {
            {0.0, 0.0, 0.0, 0.12083059685899937, 0.2411112242070902, -0.1751018655842517},
            {0.0, 0.0, 0.0, 0.10453073708428946, 0.33031057987442725, -0.22352273933363598},
            {0.0, 0.0, 0.0, 0.013735629628543994, 0.40338571047157723, -0.25520898285167615},
            {0.0, 0.0, 0.0, -0.09332581379105467, 0.311601581974594, -0.1945198959425422},
            {0.0, 0.0, 0.0, -0.05996290388705013, 0.0927982659298175, -0.061988383692168025},
            {0.0, 0.0, 0.0, 0.0782070091683667, -0.08143554773131514, 0.06084461128549694},
            {0.0, 0.0, 0.0, 0.19181469531917145, -0.16383215490377, 0.13278720752010728},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointInternalForceFI) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_Fi,
        {
            {0.004375199541621397, -0.006996757474943007, 0.0016854280323566574,
             -0.008830739650908434, -0.01379034342897087, -0.02975324221499824},
            {0.022688362568082213, -0.02992652234700804, 0.013688107068036132, -0.03886658700317607,
             -0.060824965744675934, -0.12868857402180311},
            {0.05443226231283839, -0.04765607714110308, 0.05164453045055776, -0.06741913573437128,
             -0.11199467143793916, -0.21160513689448818},
            {0.09626719733160705, -0.036356394776880435, 0.13017740515825674, -0.0655069009245357,
             -0.13688516240854653, -0.2044209307349181},
            {0.1400861741787473, 0.010259103320423194, 0.24646612271293694, -0.03557208624212079,
             -0.10605047687360963, -0.11140102512076272},
            {0.1765783599566686, 0.07337977541628125, 0.3727813760978104, -0.017058328302108794,
             -0.023041772515279488, 0.021701973146492262},
            {0.19926271187822545, 0.12238033682674138, 0.4651665411925664, -0.022580493439478086,
             0.0575214328048846, 0.13433832751076802},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointGravityForceFg) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->qp_Fg,
        {
            {0.0, 0.0, 19.620000000000008, 3.33069666549358, -2.2538354951632575, 0.0},
            {0.0, 0.0, 19.620000000000005, 3.395755863205606, -2.293994529332462, 0.0},
            {0.0, 0.0, 19.620000000000008, 3.660343899283414, -2.3535996733587927, 0.0},
            {0.0, 0.0, 19.620000000000008, 4.17217336243553, -2.2291394364636914, 0.0},
            {0.0, 0.0, 19.62, 4.7227318298581675, -1.8072954174231637, 0.0},
            {0.0, 0.0, 19.619999999999997, 5.083070688156127, -1.297737572397898, 0.0},
            {0.0, 0.0, 19.620000000000015, 5.230522791902463, -0.964616792447741, 0.0},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointMatrixOuu) {
    auto Ouu = View_NxN("Ouu", beams_->qp_Ouu.extent(1), beams_->qp_Ouu.extent(2));
    Kokkos::deep_copy(Ouu, Kokkos::subview(beams_->qp_Ouu, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Ouu,
        {
            {0., 0., 0., 1.558035187754702, 3.3878498808227704, -2.4090666622503774},
            {0., 0., 0., 2.023578567654382, 4.594419401889352, -3.2342585893237827},
            {0., 0., 0., 4.396793221398987, 8.369447695979858, -6.152454589644055},
            {0., 0., 0., 6.095010301161761, 12.749853070301084, -9.15756802064953},
            {0., 0., 0., 4.359848751597227, 9.872327664027363, -6.769213486026294},
            {0., 0., 0., 9.270255102567306, 17.449495035002304, -12.963070176574703},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointMatrixPuu) {
    auto Puu = View_NxN("Puu", beams_->qp_Puu.extent(1), beams_->qp_Puu.extent(2));
    Kokkos::deep_copy(Puu, Kokkos::subview(beams_->qp_Puu, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Puu,
        {
            {0., 0., 0., 0., 0., 0.},
            {0., 0., 0., 0., 0., 0.},
            {0., 0., 0., 0., 0., 0.},
            {1.558035187754702, 2.0235785676543823, 4.396793221398987, 6.095010301161762,
             4.947423115431053, 8.945281658389643},
            {3.3878498808227704, 4.594419401889353, 8.369447695979858, 12.162278706467262,
             9.872327664027365, 17.849848197376673},
            {-2.4090666622503774, -3.2342585893237827, -6.152454589644055, -8.832594576471866,
             -7.169566648400663, -12.963070176574703},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointMatrixQuu) {
    auto Quu = View_NxN("Quu", beams_->qp_Quu.extent(1), beams_->qp_Quu.extent(2));
    Kokkos::deep_copy(Quu, Kokkos::subview(beams_->qp_Quu, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Quu,
        {
            {0., 0., 0., 0., 0., 0.},
            {0., 0., 0., 0., 0., 0.},
            {0., 0., 0., 0., 0., 0.},
            {0., 0., 0., 1.8447536136896558, 3.635630275656869, -2.64866290970237},
            {0., 0., 0., 3.8107321412411204, 7.1833246136382, -5.294123557503821},
            {0., 0., 0., -2.4075516854952794, -5.414954154362819, 3.820161491912928},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointMatrixGuu) {
    auto Guu = View_NxN("Guu", beams_->qp_Guu.extent(1), beams_->qp_Guu.extent(2));
    Kokkos::deep_copy(Guu, Kokkos::subview(beams_->qp_Guu, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Guu,
        {
            {0., 0., 0., -0.0008012182534494841, 0.002003432464632351, 0.0015631511018243545},
            {0., 0., 0., -0.002297634478952118, 0.0006253629923483924, -0.0015967098417843995},
            {0., 0., 0., -0.0031711581076346268, 0.0031271320551441812, -0.0002573417597137699},
            {0., 0., 0., -0.009044140792420115, -0.016755394335528064, -0.022806270184157214},
            {0., 0., 0., -0.005674132164451402, -0.013394960837037522, -0.025943451454082944},
            {0., 0., 0., 0.006396216051163168, 0.013413253109011812, 0.022439101629457635},
        }
    );
}

TEST_F(BeamsTest, QuadraturePointMatrixKuu) {
    auto Kuu = View_NxN("Kuu", beams_->qp_Kuu.extent(1), beams_->qp_Kuu.extent(2));
    Kokkos::deep_copy(Kuu, Kokkos::subview(beams_->qp_Kuu, 0, Kokkos::ALL, Kokkos::ALL));
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Kuu,
        {
            {0., 0., 0., -0.0023904728226588536, 0.0005658527664274542, 0.0005703830914904407},
            {0., 0., 0., -0.0008599439459226316, -0.000971811812092634, 0.0008426153626567674},
            {0., 0., 0., -0.0015972403418206974, 0.0015555222717217175, -0.000257435063678694},
            {0., 0., 0., 0.004762288305421506, -0.016524233223710137, 0.007213755243428677},
            {0., 0., 0., 0.035164381478288514, 0.017626317482204206, -0.022463736936512112},
            {0., 0., 0., -0.0025828596476940593, 0.04278211835291491, -0.022253736971069835},
        }
    );
}

TEST_F(BeamsTest, NodalForceVectorFE) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->node_FE,
        {
            {-0.11121183449279078, -0.16149482899687723, -0.30437442031624473, -0.40385243171727625,
             -0.29275354335733944, -0.6838427114868826},
            {-0.05271722510789922, -0.09881895866851326, -0.10322757369767363, -0.04702535280786492,
             0.200307040286711, -0.4938097677451396},
            {0.11947220141210066, 0.1434066009624302, 0.2789250942058333, 0.2881567336891544,
             0.9034846722720415, 0.21303887057613874},
            {0.08548666343411367, 0.29791784250206643, 0.30730427651111236, 0.3462309471335382,
             0.7532480845688548, 0.5928285701260374},
            {-0.04102980524552424, -0.18101065579910605, -0.1786273767030272, -0.06307503428118048,
             -0.5619802667455869, -0.2600125012438039},
        }
    );
}

TEST_F(BeamsTest, NodalForceVectorFI) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->node_FI,
        {
            {0.00011604556408931232, -0.0006507362696177878, -0.0006134866787566515,
             0.0006142322011934136, -0.0021994796881491885, -0.002486843354672628},

            {0.042241295273487904, -0.04970288500953047, 0.030888872844313506, -0.06975512417597267,
             -0.10161193406971922, -0.2145759755006094},

            {0.17821954823792277, -0.06852557905980948, 0.2391832328082968, -0.11742114482709139,
             -0.25775479677677504, -0.38514969641195906},

            {0.28429636341252773, 0.09461848004332962, 0.5753721231362983, -0.03722226802421734,
             -0.08186055756075394, -0.023972312767031694},

            {0.07251940986370606, 0.047582193710461344, 0.17271485835503486, -0.007667261048491411,
             0.027312893470209154, 0.05581821163081033},
        }
    );
}

TEST_F(BeamsTest, NodalForceVectorFG) {
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        beams_->node_FG,
        {
            {0., 0., 5.387595382846484, 0.9155947038768231, -0.6120658127519644, 0.},
            {0., 0., 27.214654505466733, 4.774257980210559, -3.2246653192400943, 0.},
            {0., 0., 36.276475250297956, 7.721022587119256, -4.10632562513434, 0.},
            {0., 0., 33.389731486725104, 8.507277441455756, -2.4615219287391987, 0.},
            {0., 0., 6.941513108125961, 1.8625822925070992, -0.3057154246940985, 0.},
        }
    );
}

TEST_F(BeamsTest, ResidualForceVector) {
    View_N residual_vector("residual_vector", beams_->num_nodes * 6);
    AssembleResidualVector(*beams_, residual_vector);
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_1D_equal(
        residual_vector,
        {
            -0.11109578892870146, -0.162145565266495,   -5.692583289841486,    -1.3188329033929058,
            0.3171127897064757,   -0.6863295548415552,  -0.010475929834411313, -0.14852184367804372,
            -27.286993206320094,  -4.891038457194397,   3.323360425457086,     -0.708385743245749,
            0.29769174965002343,  0.0748810219026207,   -35.75836692328382,    -7.550286998257193,
            4.752055500629607,    -0.17211082583582032, 0.3697830268466414,    0.39253632254539605,
            -32.507055087077696,  -8.198268762346435,   3.1329094557472996,    0.5688562573590057,
            0.031489604618181816, -0.1334284620886447,  -6.947425626473954,    -1.933324587836771,
            -0.2289519485812792,  -0.20419428961299355,
        }
    );
}

TEST_F(BeamsTest, MassMatrix) {
    View_NxN mass_matrix("mass_matrix", beams_->num_nodes * 6, beams_->num_nodes * 6);
    AssembleMassMatrix(*beams_, mass_matrix);
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Kokkos::subview(mass_matrix, Kokkos::make_pair(0, 10), Kokkos::make_pair(0, 10)),
        {{0.4772429894755368, 9.713031930841838e-18, -1.2295544475412003e-17, -8.212152094108017e-18,
          0.1485885016038723, -0.0822496584432702, 0.1443512681342982, 1.3253623350648216e-17,
          -4.8617583801458436e-18, -1.6005140418030024e-18},
         {9.936092394286555e-18, 0.4772429894755369, 2.5703392174542478e-18, -0.14858850160387224,
          -5.19618750120662e-19, 0.054832245964289955, 1.2010730229815319e-17, 0.14435126813429838,
          2.0720613425722775e-18, -0.04790809612642516},
         {-1.2065288513146487e-17, 2.6854671985870057e-18, 0.4772429894755368, 0.0822496584432702,
          -0.05483224596428997, -2.8377852130431172e-18, -6.144744827457221e-18,
          1.4305681189165887e-18, 0.14435126813429827, 0.020235106127081497},
         {8.212152094108017e-18, -0.1485885016038723, 0.0822496584432702, 0.3153852713166594,
          0.4718215615852798, 0.8539719697148752, 1.6005140418030024e-18, -0.04790809612642516,
          0.020235106127081483, 0.09515218646879706},
         {0.14858850160387224, 5.19618750120662e-19, -0.054832245964289955, 0.4718215615852798,
          0.7112650295295178, 1.2789008081522635, 0.04790809612642516, -8.782871775664643e-19,
          -0.016680738749130185, 0.11883349414890036},
         {-0.0822496584432702, 0.05483224596428997, 2.8377852130431172e-18, 0.8539719697148751,
          1.2789008081522635, 2.3140506254825812, -0.020235106127081497, 0.016680738749130182,
          1.1444287473322695e-18, 0.2757532737315796},
         {0.14435126813429824, 1.3253623350648214e-17, -4.861758380145844e-18,
          -1.6005140418030024e-18, 0.047908096126425145, -0.020235106127081483, 2.4804427763561963,
          1.7875852123208742e-18, -3.043502162371342e-17, 1.304826291448944e-17},
         {1.2010730229815317e-17, 0.1443512681342984, 2.072061342572277e-18, -0.04790809612642513,
          8.782871775664643e-19, 0.016680738749130185, 8.712986899189442e-18, 2.4804427763561963,
          -8.878505094279631e-18, -0.7578088933978372},
         {-6.144744827457222e-18, 1.4305681189165885e-18, 0.14435126813429836, 0.0202351061270815,
          -0.01668073874913019, -1.1444287473322695e-18, -2.3286219882429734e-17,
          -5.30410422363779e-18, 2.480442776356197, 0.44820425641155487},
         {1.6005140418030024e-18, -0.047908096126425145, 0.020235106127081483, 0.09515218646879706,
          0.11883349414890036, 0.2757532737315796, -1.304826291448944e-17, -0.7578088933978372,
          0.4482042564115548, 1.7094726327843577}}
    );
}

TEST_F(BeamsTest, GyroscopicInertiaMatrix) {
    View_NxN gyro_matrix("gyro_matrix", beams_->num_nodes * 6, beams_->num_nodes * 6);
    AssembleGyroscopicInertiaMatrix(*beams_, gyro_matrix);
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Kokkos::subview(gyro_matrix, Kokkos::make_pair(0, 10), Kokkos::make_pair(0, 10)),
        {
            {0.0, 0.0, 0.0, -0.0001426663153504464, 0.001061043044936692, 0.0007128139299700778, 0.0,
             0.0, 0.0, -0.00042343204092726603},
            {0.0, 0.0, 0.0, -0.0013748131196039076, 0.000577402124940412, -0.0010442520843553006,
             0.0, 0.0, 0.0, 0.0021382254584943446},
            {0.0, 0.0, 0.0, -0.001688158096960472, 0.0015154838660580016, -6.202794614389436e-5, 0.0,
             0.0, 0.0, 0.002192417574201745},
            {0.0, 0.0, 0.0, -0.004746284693901607, -0.005542137933681068, -0.015032369022397915, 0.0,
             0.0, 0.0, 0.006120525867823108},
            {0.0, 0.0, 0.0, -0.007058842799765419, -0.0074544909146794635, -0.011236665021037224,
             0.0, 0.0, 0.0, 0.01814429994282852},
            {0.0, 0.0, 0.0, 0.006723431305612133, 0.006836038817014307, 0.012200775608581073, 0.0,
             0.0, 0.0, -0.016110499694147785},
            {0.0, 0.0, 0.0, -0.0004234320409272659, -0.001384641407262718, -0.0006517293036126811,
             0.0, 0.0, 0.0, -0.0021106141083723495},
            {0.0, 0.0, 0.0, 0.002138225458494344, -0.0012997081923709925, 0.0017665527476220051, 0.0,
             0.0, 0.0, -0.024429862622505634},
            {0.0, 0.0, 0.0, 0.0021924175742017446, -0.0016379413105619418, -8.30884785433907e-5, 0.0,
             0.0, 0.0, -0.03016742333811249},
            {0.0, 0.0, 0.0, 0.006120525867823106, -0.00028680862214438885, 0.02562550958139943, 0.0,
             0.0, 0.0, -0.08551343093929081},
        }
    );
}

TEST_F(BeamsTest, InertialStiffnessMatrix) {
    View_NxN stiffness_matrix("stiffness_matrix", beams_->num_nodes * 6, beams_->num_nodes * 6);
    AssembleInertialStiffnessMatrix(*beams_, stiffness_matrix);
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Kokkos::subview(stiffness_matrix, Kokkos::make_pair(0, 10), Kokkos::make_pair(0, 10)),
        {
            {0.0, 0.0, 0.0, -0.0010312283191276819, 0.00022828252813933251, 0.00025788162731961564,
             0.0, 0.0, 0.0, 0.000828638647715011},
            {0.0, 0.0, 0.0, -0.0005342529500814191, -0.0003427450288445843, 0.00038766915944741837,
             0.0, 0.0, 0.0, 0.0008717787916608668},
            {0.0, 0.0, 0.0, -0.0009049442119056368, 0.0006857868102209655, -7.455964282265728e-5,
             0.0, 0.0, 0.0, 0.0012970085762372724},
            {0.0, 0.0, 0.0, 0.0011064649386109667, -0.005132825962200599, 0.0023459837420038163, 0.0,
             0.0, 0.0, 0.0017576841422581805},
            {0.0, 0.0, 0.0, 0.013679427110321132, 0.009802015790058169, -0.011423844996530673, 0.0,
             0.0, 0.0, -0.006684441135151801},
            {0.0, 0.0, 0.0, -0.001258920416833025, 0.021253601631098115, -0.012586819234456972, 0.0,
             0.0, 0.0, 0.0017999729134431743},
            {0.0, 0.0, 0.0, 0.000828638647715011, -0.000145439743177502, -0.00023692882314093212,
             0.0, 0.0, 0.0, -0.018016915951401678},
            {0.0, 0.0, 0.0, 0.0008717787916608667, 5.182301200776362e-5, -0.00038437914462594486,
             0.0, 0.0, 0.0, -0.00949444512724848},
            {0.0, 0.0, 0.0, 0.001297008576237272, -0.0005818101975982128, -4.041870114163754e-5, 0.0,
             0.0, 0.0, -0.016322199341119767},
            {0.0, 0.0, 0.0, 0.0017576841422581805, -0.0016529973049258558, 0.00024380378398859682,
             0.0, 0.0, 0.0, 0.01643369648823959},
        }
    );
}

TEST_F(BeamsTest, ElasticStiffnessMatrix) {
    View_NxN stiffness_matrix("stiffness_matrix", beams_->num_nodes * 6, beams_->num_nodes * 6);
    AssembleElasticStiffnessMatrix(*beams_, stiffness_matrix);
    openturbine::gen_alpha_solver::tests::expect_kokkos_view_2D_equal(
        Kokkos::subview(stiffness_matrix, Kokkos::make_pair(0, 10), Kokkos::make_pair(0, 10)),
        {
            {1.7424036187210084, 2.596502219359714, 4.70722699207639, 6.038208635026575,
             4.008761957177047, 11.041003289560509, -1.9105294193016438, -2.8916422395696437,
             -5.172163025541685, -8.239476755715856},
            {2.596502219359714, 3.8965777342793553, 7.025160057060132, 9.14894505783328,
             6.2904292257105014, 16.27767001826219, -2.8916422395696433, -4.457561339473139,
             -7.85681787391545, -12.205169043996243},
            {4.70722699207639, 7.025160057060134, 12.727097764109777, 16.225509535615167,
             11.277462468086876, 29.650971549800378, -5.172163025541685, -7.8568178739154515,
             -14.028322960403248, -22.416337626824973},
            {6.038208635026575, 9.14894505783328, 16.225509535615164, 20.99257091515642,
             14.218595869245213, 38.05901229191301, -6.532113484105117, -10.109964863493733,
             -17.57064235123448, -28.342276061680508},
            {4.008761957177048, 6.2904292257105, 11.277462468086878, 14.868678090473102,
             10.751274596456234, 25.485768018129704, -4.047093684858945, -6.725397962417947,
             -11.683862995867345, -18.130505273553705},
            {11.041003289560509, 16.27767001826219, 29.650971549800374, 37.77637525623115,
             25.87563675499679, 69.32844100998123, -12.42535227980556, -18.54436130393525,
             -33.362862768740996, -53.08105943115722},
            {-1.9105294193016438, -2.891642239569644, -5.172163025541685, -6.532113484105117,
             -4.047093684858941, -12.42535227980556, 3.1455717764246924, 4.927830168195938,
             8.36685078059365, 12.630242877160633},
            {-2.8916422395696437, -4.457561339473139, -7.85681787391545, -10.109964863493735,
             -6.725397962417947, -18.544361303935244, 4.927830168195938, 7.953651382069495,
             13.187690269920964, 19.73441081934533},
            {-5.172163025541685, -7.8568178739154515, -14.028322960403246, -17.570642351234486,
             -11.683862995867345, -33.362862768740996, 8.36685078059365, 13.187690269920964,
             22.349209381523877, 33.63784171860367},
            {-8.239476755715856, -12.205169043996245, -22.41633762682497, -28.342276061680504,
             -18.196589854118816, -53.05980024980051, 12.630242877160631, 19.73441081934533,
             33.63784171860367, 51.492170578188045},
        }
    );
}

}  // namespace openturbine::restruct_poc::tests
