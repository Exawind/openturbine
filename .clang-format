# -*- mode: yaml -*-

# This file determines clang-format's style settings; for details, refer to
# http://clang.llvm.org/docs/ClangFormatStyleOptions.html

# The extra indent or outdent of access modifiers, e.g. public/private.
# We are choosing to align the access modifiers to the same level as e.g.
# the class/struct keyword
AccessModifierOffset: -4

# Do NOT allow short enums on a single line
AllowShortEnumsOnASingleLine: false

# Compress functions onto a single line (when they fit) iff they are defined
# inline only i.e. inside a of class (it does not imply empty)
AllowShortFunctionsOnASingleLine: InlineOnly

# Compress lambdas onto a single line iff they are empty
AllowShortLambdasOnASingleLine: Empty

# Make loops more conspicuous
AllowShortLoopsOnASingleLine: false

# Use the Google C++ Style Guide (with some modifications as pointed out below)
# in this project
BasedOnStyle: Google

# Increase the column limit to 100
ColumnLimit: 100

# Do NOT analyze the formatted file for the most common alignment of & and *.
# Used with the "PointerAlignment" option to force pointers to the type
DerivePointerAlignment: false

# Specify the #include statement order. This implements the order mandated by
# the Google C++ Style Guide: related header, C headers, C++ headers, library
# headers, and finally the project headers.
#
# To obtain updated lists of system headers used in the below expressions, see:
# http://stackoverflow.com/questions/2027991/list-of-standard-header-files-in-c-and-c/2029106#2029106
IncludeCategories:
  # C system headers
  - Regex:    '^[<"](aio|arpa/inet|assert|complex|cpio|ctype|curses|dirent|dlfcn|errno|fcntl|fenv|float|fmtmsg|fnmatch|ftw|glob|grp|iconv|inttypes|iso646|langinfo|libgen|limits|locale|math|monetary|mqueue|ndbm|netdb|net/if|netinet/in|netinet/tcp|nl_types|poll|pthread|pwd|regex|sched|search|semaphore|setjmp|signal|spawn|stdalign|stdarg|stdatomic|stdbool|stddef|stdint|stdio|stdlib|stdnoreturn|string|strings|stropts|sys/ipc|syslog|sys/mman|sys/msg|sys/resource|sys/select|sys/sem|sys/shm|sys/socket|sys/stat|sys/statvfs|sys/time|sys/times|sys/types|sys/uio|sys/un|sys/utsname|sys/wait|tar|term|termios|tgmath|threads|time|trace|uchar|ulimit|uncntrl|unistd|utime|utmpx|wchar|wctype|wordexp)\.h[">]$'
    Priority: 20

  # C++ system headers (as of C++23)
  - Regex:    '^[<"](algorithm|any|array|atomic|barrier|bit|bitset|cassert|ccomplex|cctype|cerrno|cfenv|cfloat|charconv|chrono|cinttypes|ciso646|climits|clocale|cmath|codecvt|compare|complex|concepts|condition_variable|coroutine|csetjmp|csignal|cstdalign|cstdarg|cstdbool|cstddef|cstdint|cstdio|cstdlib|cstring|ctgmath|ctime|cuchar|cwchar|cwctype|deque|exception|execution|expected|filesystem|flat_map|flat_set|format|forward_list|fstream|functional|future|generator|initializer_list|iomanip|ios|iosfwd|iostream|istream|iterator|latch|limits|list|locale|map|mdspan|memory|memory_resource|mutex|new|numbers|numeric|optional|ostream|print|queue|random|ranges|ratio|regex|scoped_allocator|semaphore|set|shared_mutex|source_location|span|spanstream|sstream|stack|stacktrace|stdexcept|stdfloat|stop_token|streambuf|string|string_view|strstream|syncstream|system_error|thread|tuple|type_traits|typeindex|typeinfo|unordered_map|unordered_set|utility|valarray|variant|vector|version)[">]$'
    Priority: 30

  # Other libraries' h files (with angles)
  - Regex:    '^<'
    Priority: 40

  # This project's h files
  - Regex:    '^"src'
    Priority: 50

  # Other libraries' h files (with quotes)
  - Regex:    '^"'
    Priority: 40

# Increase the indentation width to 4 columns
IndentWidth: 4

Language: Cpp

# Force pointers to the type:
# Some folks prefer to write "int& foo" while others prefer "int &foo". The
# Google Style Guide only asks for consistency within a project, we choose
# to use "int& foo" for this project
PointerAlignment: Left

# The Google Style Guide only asks for consistency w.r.t. "right const" vs.
# "const left" alignment of specifiers and qualifiers (e.g. const/volatile).
# In this project we are choosing to use the "const left" style
QualifierAlignment: Left

# Language standard
Standard: c++17
